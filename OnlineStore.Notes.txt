recommended steps to FAP
1) decide what to do
2) create view - front end so everyone can visuallize what to do
3) identify backend - controller and model and sql
4) divide the tasks / assign to particular person


Type of Business = Online Bookstore
Name of Business = Book World
Background/Context = Non existing Online Bookstore for small business
Generated Reports
1. Admin List
2. Guest List
3. Registered User List
4. Order Details
5. Confirmation Receipt
6. Payment Receipt
7. Report Sales
8. Inventory of Books
9. Refund Form
10. Replacement of Item Form
Payment Form: G Cash
Company: Small Business Bookstores 
Monetization: 

List of JSPs
Color Pallet - Blue Green, White
1. Home/Welcome Page - Angela
2. Log In Page - Benedict
3. Sign Up Page - Beendict
4. Success Page 
Admin: All Info with Edit Database for Admin, Guest, Registered User, & Inventory
Guest: All info of Books (Cant Buy Books)
Registered User: All Info
5. Customized Error Pages
6. Error 404 Page - Gianina
7. Order Book Page
8. Refund Page
9. Shipment Details w/ Payment Page
10. Success Order Page

CREATE SCHEMA cs2609

Schedule

May 6 - approve - 
May 11 - views (static) -> finalize styles/formatting
	- once the java code is introduced, its hard to edit the non-static jsp
May 11 - Payment (qr only)
May 16 - final tables / schema
May 20 - create more sql data / images
May 20 - complete models / controler
buffer / testing / bug fix
May 23 Mon Video Writeup
May 25 Wed Deadline

------------------------------------

Head First Servlets and JSP



Role :
	Admin - can add product
		can edit product - set stockcount to new value

	User - can buy product / reduce stock count by 1
		can put item in cart - only check stock count but does not decrease stock count until payment
				- all items in cart are collected until payment
		can payment - must at least 1 item in cart that is on stock
				upon successful payment, reduce stock count (needs mutex lock)

	Guest - can view products
		can login
		when add to cart - redict to login page, that item is added to cart upon successful login



Product - can have stockcount 0 or more
	- when value reaches 0, cannot be bought in store, UI shows out of stock

Cart - shows the list of all items selected by user
	- which will be included in final payment

Order - selected from cart for final payment
	- show Order Summary 
		with Subtotal (11 items)
		and Total Amount â‚±18,352.00


----------------------
	login user -> know : userid, cart
	select product user ->  productid

	addcart(userid, productid) ->
		if not cart yet exists or empty
			create a cartid for the user, add productid
		else if cart exists
			user the cartid and add product

	addcart(userid, productid) ->
		//if not cart yet exists or empty
		//	create a cartid for the user, add productid
		else if cart exists
			user the cartid and add product
	
	payment(userid, cartid?)
		if cart is empty / remove all, or stock is not present
			error
		else 
			online payment
			if success
				mark order as paid

	https://stackoverflow.com/questions/66828861/is-there-any-api-integration-for-gcash-payment
	GCash - worst case (if decamora accepts)
		show qr code
		pay via phone
		verify payments details - mark purchase as paid by admin
		message received from - you paid to 

	https://hackmd.io/@paymaya-pg/Checkout#Sandbox-Test-Credentials



